#!/bin/bash

# Node Monitor - Control script for node-controller-rust

# Configuration
BINARY_PATH="./target/release/node-controller-rust"
LOG_FILE="node-controller.log"
PID_FILE=".node-controller.pid"

# Check if the service is running
is_running() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p $PID > /dev/null; then
            return 0 # Running
        fi
    fi
    return 1 # Not running
}

# Commands
case "$1" in
    status)
        if is_running; then
            PID=$(cat "$PID_FILE")
            echo "Node controller is running with PID $PID"
        else
            echo "Node controller is not running"
            exit 1
        fi
        ;;
    start)
        if is_running; then
            echo "Node controller is already running with PID $(cat $PID_FILE)"
            exit 1
        fi
        
        # Check if the binary exists
        if [ ! -f "$BINARY_PATH" ]; then
            echo "Error: Node controller binary not found at $BINARY_PATH"
            echo "Please build the application with: cargo build --release"
            exit 1
        fi
        
        echo "Starting node controller..."
        "$BINARY_PATH" > "$LOG_FILE" 2>&1 &
        PID=$!
        echo $PID > "$PID_FILE"
        
        echo "Node controller started with PID $PID"
        echo "Logs are being written to $LOG_FILE"
        ;;
    stop)
        if is_running; then
            PID=$(cat "$PID_FILE")
            echo "Stopping node controller (PID $PID)..."
            kill $PID
            rm -f "$PID_FILE"
            echo "Node controller stopped"
        else
            echo "Node controller is not running"
        fi
        ;;
    restart)
        $0 stop
        sleep 2
        $0 start
        ;;
    logs)
        if [ ! -f "$LOG_FILE" ]; then
            echo "Log file not found: $LOG_FILE"
            exit 1
        fi
        
        if [ "$2" == "-f" ]; then
            echo "Showing logs (Ctrl+C to exit)..."
            tail -f "$LOG_FILE"
        else
            lines=${2:-50}
            echo "Showing last $lines lines of logs..."
            tail -n $lines "$LOG_FILE"
        fi
        ;;
    update)
        echo "Checking for updates..."
        if is_running; then
            echo "Node controller is running. Updates will be handled by the application."
            echo "To view update progress, use: $0 logs -f"
            grep -a "update\|Update" "$LOG_FILE" | tail -n 20
        else
            echo "Node controller is not running. Starting with update check..."
            $0 start
        fi
        ;;
    *)
        echo "Node Monitor - Control script for node-controller-rust"
        echo
        echo "Usage: $0 [command]"
        echo
        echo "Commands:"
        echo "  status                Check status of the node controller"
        echo "  start                 Start the node controller service"
        echo "  stop                  Stop the node controller service"
        echo "  restart               Restart the node controller service"
        echo "  logs [lines|-f]       Show logs (last N lines or follow with -f)"
        echo "  update                Check for and apply updates"
        echo
        exit 1
        ;;
esac

exit 0
